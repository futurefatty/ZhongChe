apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            storeFile file(getProjectDir().getAbsolutePath() + File.separator + "zc.jks")
            storePassword 'zc123456'
            keyAlias = 'zc'
            keyPassword 'zc123456'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId "com.neusoft.zcapplication"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        ndk {
            abiFilters "armeabi"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField("boolean", "IS_DEBUG", "false")
        }
        debug {
            buildConfigField("boolean", "IS_DEBUG", "true")
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all {
        // 判断Debug or Release
        def buildType = it.buildType.name
        // 获取当前时间“YYYY-MM-dd”格式
        def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
        it.outputs.each {
            // 命名规则：渠道名_版本名_创建时间_构建类型.apk
            def fileName = "ZhongChe_${defaultConfig.versionName}_${createTime}_${buildType}.apk"
            // 将名字打印出来查看效果
            println "文件名:--->${fileName}"
            // 命名生效
            it.outputFileName = fileName // Gradle 4.0及以上

        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    //picasso图片处理
    implementation files('libs/picasso-2.5.2.jar')
    //base64加密
    implementation files('libs/sun.misc.BASE64Decoder.jar')
    //高德地图
    implementation files('libs/AMap3DMap_6.4.0_AMapNavi_6.2.0_AMapSearch_6.1.0_AMapLocation_4.2.0_20180814.jar')
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //base64加密
    implementation files('libs/sun.misc.BASE64Decoder.jar')
    //高德地图
    implementation files('libs/AMap3DMap_6.4.0_AMapNavi_6.2.0_AMapSearch_6.1.0_AMapLocation_4.2.0_20180814.jar')
    //直接指定okhttp的版本
    implementation 'com.qiniu:qiniu-android-sdk:7.3.+'
    //使用maven依赖方式，不使用jar包
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    implementation 'q.rorbin:badgeview:1.1.3'
    implementation 'com.lzy.net:okgo:2.1.4'
    implementation 'com.lzy.net:okserver:1.1.3'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:WheelPicker:1.5.6.20181018'
    implementation 'com.huxq17.xrefreshview:xrefreshview:3.6.9'
    implementation project(path: ':commonlib')
}
